---
import "../styles/global.css"
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import {ClientRouter} from 'astro:transitions';
interface Props {
    title: string;
    description?: string;
}

const descriptionDefault: string = `
Website Bidang Akademis dan Keprofesian Ikatan Mahasiswa Elektro Fakultas Teknik Universitas Indonesia
`

const {title = "Akpro IME FTUI 2025", description = descriptionDefault} = Astro.props;
---

<!doctype html>
<html lang="en" data-theme="light">
    <head>
        <link rel="icon" href="/logo-akpro-ime-25-polos-removed-effects.svg"/>
        <link rel="stylesheet"
              href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,400,1,0&display=block"
        />
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,400;0,700;1,400;1,700&display=swap"
              rel="stylesheet">
        <link rel="preload" href="/logo-akpro-ime-25-polos-removed-effects.svg" as="image" type="image/svg+xml"/>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <meta name="description" content={description}/>
        <meta name="keywords"
              content="Akpro, IME, FTUI, UI, Universitas Indonesia, Fakultas Teknik Universitas Indonesia, Teknik Elektro, Teknik Komputer, Teknik Biomedik">
        <meta name="og:title" content="Akpro IME FTUI 2025">
        <meta name="og:image" content="/logo-akpro-ime-25-polos-removed-effects.svg">
        <meta name="generator" content={Astro.generator}/>
        <title>{title}</title>
        <script is:inline>
            const setTheme = (document) => {
                if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                    document.documentElement.setAttribute('data-theme', 'dark');
                }
                const localStorageTheme = localStorage.getItem('theme') || document.documentElement.getAttribute('data-theme');
                document.documentElement.setAttribute('data-theme', localStorageTheme);
            }
            setTheme(document);
            document.addEventListener('astro:before-swap', e => {
                setTheme(e.newDocument);
            });
        </script>
        <ClientRouter/>
    </head>
    <body>
        <Header/>
        <main class="content-grid">
            <slot/>
        </main>
        <Footer/>
    </body>
</html>

<style is:global>
    /*noinspection CssOverwrittenProperties*/
    html,
    body {
        margin: 0;
        min-height: 100vh;
        min-height: 100svh;
        background: rgb(var(--background));
    }

    body {
        display: flex;
        flex-direction: column;
        transition: color, background-color 0.15s linear;
    }

    main {
        flex: 1;
    }
</style>
